// Mocks generated by Mockito 5.4.5 from annotations
// in parse_server_sdk/test/src/objects/parse_object/parse_object_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:parse_server_sdk/parse_server_sdk.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeParseCoreData_0 extends _i1.SmartFake implements _i2.ParseCoreData {
  _FakeParseCoreData_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeParseNetworkResponse_1 extends _i1.SmartFake
    implements _i2.ParseNetworkResponse {
  _FakeParseNetworkResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeParseNetworkByteResponse_2 extends _i1.SmartFake
    implements _i2.ParseNetworkByteResponse {
  _FakeParseNetworkByteResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ParseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockParseClient extends _i1.Mock implements _i2.ParseClient {
  MockParseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ParseCoreData get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: _FakeParseCoreData_0(this, Invocation.getter(#data)),
      ) as _i2.ParseCoreData);

  @override
  _i3.Future<_i2.ParseNetworkResponse> get(
    String? path, {
    _i2.ParseNetworkOptions? options,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {#options: options, #onReceiveProgress: onReceiveProgress},
        ),
        returnValue: _i3.Future<_i2.ParseNetworkResponse>.value(
          _FakeParseNetworkResponse_1(
            this,
            Invocation.method(
              #get,
              [path],
              {#options: options, #onReceiveProgress: onReceiveProgress},
            ),
          ),
        ),
      ) as _i3.Future<_i2.ParseNetworkResponse>);

  @override
  _i3.Future<_i2.ParseNetworkResponse> put(
    String? path, {
    String? data,
    _i2.ParseNetworkOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#put, [path], {#data: data, #options: options}),
        returnValue: _i3.Future<_i2.ParseNetworkResponse>.value(
          _FakeParseNetworkResponse_1(
            this,
            Invocation.method(
              #put,
              [path],
              {#data: data, #options: options},
            ),
          ),
        ),
      ) as _i3.Future<_i2.ParseNetworkResponse>);

  @override
  _i3.Future<_i2.ParseNetworkResponse> post(
    String? path, {
    String? data,
    _i2.ParseNetworkOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#post, [path], {#data: data, #options: options}),
        returnValue: _i3.Future<_i2.ParseNetworkResponse>.value(
          _FakeParseNetworkResponse_1(
            this,
            Invocation.method(
              #post,
              [path],
              {#data: data, #options: options},
            ),
          ),
        ),
      ) as _i3.Future<_i2.ParseNetworkResponse>);

  @override
  _i3.Future<_i2.ParseNetworkResponse> postBytes(
    String? path, {
    _i3.Stream<List<int>>? data,
    _i2.ParseNetworkOptions? options,
    _i2.ProgressCallback? onSendProgress,
    dynamic cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postBytes,
          [path],
          {
            #data: data,
            #options: options,
            #onSendProgress: onSendProgress,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i3.Future<_i2.ParseNetworkResponse>.value(
          _FakeParseNetworkResponse_1(
            this,
            Invocation.method(
              #postBytes,
              [path],
              {
                #data: data,
                #options: options,
                #onSendProgress: onSendProgress,
                #cancelToken: cancelToken,
              },
            ),
          ),
        ),
      ) as _i3.Future<_i2.ParseNetworkResponse>);

  @override
  _i3.Future<_i2.ParseNetworkResponse> delete(
    String? path, {
    _i2.ParseNetworkOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#delete, [path], {#options: options}),
        returnValue: _i3.Future<_i2.ParseNetworkResponse>.value(
          _FakeParseNetworkResponse_1(
            this,
            Invocation.method(#delete, [path], {#options: options}),
          ),
        ),
      ) as _i3.Future<_i2.ParseNetworkResponse>);

  @override
  _i3.Future<_i2.ParseNetworkByteResponse> getBytes(
    String? path, {
    _i2.ParseNetworkOptions? options,
    _i2.ProgressCallback? onReceiveProgress,
    dynamic cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBytes,
          [path],
          {
            #options: options,
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i3.Future<_i2.ParseNetworkByteResponse>.value(
          _FakeParseNetworkByteResponse_2(
            this,
            Invocation.method(
              #getBytes,
              [path],
              {
                #options: options,
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
              },
            ),
          ),
        ),
      ) as _i3.Future<_i2.ParseNetworkByteResponse>);
}
